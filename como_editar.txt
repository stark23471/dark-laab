=========================================================
GUIA DE EDIÇÃO - Site 3D do Estúdio de Tatuagem
=========================================================

Olá! Este guia vai te ajudar a atualizar seu portfólio 3D sem precisar mexer muito no código complexo.

O site foi construído do zero (HTML, CSS, JavaScript) usando a biblioteca Three.js para criar o ambiente 3D.


---------------------------------------------------------
1. ESTRUTURA DOS ARQUIVOS (O QUE CADA UM FAZ)
---------------------------------------------------------

/
│
├── index.html
│   (O "esqueleto" do site. Contém todo o texto da tela
│   de entrada, do rodapé e a estrutura dos painéis.)
│
├── css/styles.css
│   (A "aparência". Define cores, fontes, tamanho dos
│   botões e as animações da interface.)
│
├── data/arts.json
│   (O MAIS IMPORTANTE! É o "banco de dados" das suas
│   tatuagens. Você vai editar muito este arquivo.)
│
├── js/
│   ├── main.js
│   │   (O "maestro". Controla a UI, abre e fecha
│   │   painéis, e define o número de WhatsApp.)
│   │
│   ├── scene.js
│   │   (O "mundo 3D". Define o corredor, as luzes,
│   │   a névoa e onde os quadros ficam.)
│   │
│   └── controls.js
│       (O "movimento". Controla o WASD, mouse,
│       e o joystick de celular.)
│
└── assets/
    ├── images/ (Suas imagens de fundo, quadros, etc.)
    └── audio/ (Seus sons de ambiente)


---------------------------------------------------------
2. COMO EDITAR O CONTEÚDO (O MAIS FÁCIL)
---------------------------------------------------------

► A. COMO ADICIONAR UMA NOVA TATUAGEM (GALERIA)

1.  Abra o arquivo `/data/arts.json`.
2.  Ele contém uma lista de "objetos" entre colchetes `[ ... ]`.
    Cada objeto é uma arte, e fica entre chaves `{ ... }`.
3.  Copie um objeto inteiro (de `{` até `}`), coloque uma VÍRGULA `,` depois do último, e cole o objeto copiado.
4.  Edite os dados do novo objeto:

    {
      "id": "art-004", // ⚠️ MUDE O ID! Tem que ser único.
      "title": "O Título da Sua Nova Arte",
      "shortDescription": "A descrição que aparece no painel.\n\nUse \n para pular linha.\n• Use símbolos como este.",
      "imageSrc": "assets/images/artworks/sua-nova-imagem.jpg", // ⚠️ Coloque sua imagem na pasta /assets/images/artworks/
      "imageAlt": "Descrição da imagem para acessibilidade (ex: Tatuagem de lobo na floresta)",
      "tags": ["tag1", "tag2"], // (Opcional)
      "whatsappImageUrl": "https://link-da-imagem-completa.jpg" // ⚠️ Link para a imagem que vai na mensagem do WhatsApp (pode ser um link do Imgur ou do seu site)
    }

5.  Salve o arquivo. A cena 3D vai adicionar o novo quadro e a placa automaticamente na próxima vez que a página carregar.


► B. COMO MUDAR O NÚMERO DE WHATSAPP

1.  Abra o arquivo `/js/main.js`.
2.  Logo no topo, você verá as constantes:

    const WHATSAPP_NUMBER = '+55XXXXXXXXXX'; // ⚠️ Mude aqui
    const MESSAGE_TEMPLATE = '...'; // ⚠️ Mude a mensagem padrão aqui

3.  Lembre-se de usar o formato internacional (+55 DDD NÚMERO).


► C. COMO MUDAR TEXTOS (TELA DE ENTRADA, RODAPÉ)

1.  Abra o arquivo `/index.html`.
2.  Procure pelos textos que quer mudar. Eles estão em tags HTML:
    -   `<div class="logo-placeholder">Seu Logo Aqui</div>`
    -   `<h1 class="slogan-placeholder">Arte Eterna na Escuridão</h1>`
    -   No rodapé (`<footer>`), mude os links do Instagram, TikTok, etc.
    -   Mude o texto de Copyright.


---------------------------------------------------------
3. COMO EDITAR A APARÊNCIA (DESIGN)
---------------------------------------------------------

► A. COMO MUDAR CORES E FONTES

1.  Abra o arquivo `/css/styles.css`.
2.  Logo no topo, você verá o bloco `:root { ... }`.
3.  Essas são as "variáveis" de design do site.

    :root {
        /* Mude os códigos hex (ex: #000000) para as cores que quiser */
        --color-background: #000000;
        --color-text-primary: #f0f0f0;
        --color-accent: #ffffff;
        
        /* Para mudar as fontes, vá no Google Fonts, escolha duas
           e substitua os nomes aqui E no <link> do index.html */
        --font-primary: 'Cinzel', serif; /* Títulos */
        --font-secondary: 'Inter', sans-serif; /* Textos */
    }


► B. COMO MUDAR A IMAGEM DE FUNDO (TELA DE ENTRADA)

1.  Abra `/css/styles.css`.
2.  Procure por `#landing-screen { ... }`.
3.  Mude a linha:
    `background-image: url('../assets/images/house-bg.jpg');`
    (Lembre-se de colocar sua nova imagem na pasta /assets/images/)


---------------------------------------------------------
4. COMO EDITAR O MUNDO 3D (AVANÇADO)
---------------------------------------------------------

Isto é mais complexo e envolve mexer no Three.js.

► A. MUDAR LUZES E NÉVOA

1.  Abra `/js/scene.js`.
2.  Procure pela função `setupLights()`. Você pode mudar a cor (`0xffaa40`) e intensidade (`2.0`) das luzes das velas (`PointLight`).
3.  Procure por `setupFog()`. Você pode mudar a cor (`0x000000`) e a distância (`near: 1`, `far: 20`).


► B. SUBSTITUIR O CORREDOR POR UM MODELO 3D (.GLB)

O corredor atual é feito de "planos" (geometria básica) na função `createCorridor()`. Para usar um modelo 3D (feito no Blender, por exemplo):

1.  Comente ou delete o conteúdo da função `createCorridor()`.
2.  No topo do `scene.js`, importe o `GLTFLoader` (remova os `//`):
    `// import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';`
3.  No construtor, ative o loader (remova os `//`):
    `// this.gltfLoader = new GLTFLoader();`
4.  No `init()`, ative a chamada para `loadComplexModels()` (remova os `//`):
    `// await this.loadComplexModels();`
5.  Encontre a função (comentada) `loadComplexModels()` e edite-a para carregar seu arquivo `.glb` do corredor. Você precisará ajustar luzes e colisões.


---------------------------------------------------------
5. COMO PUBLICAR O SITE (DEPLOY)
---------------------------------------------------------

Seu site é "estático" (só HTML, CSS, JS), o que o torna muito fácil de publicar.

► OPÇÃO 1: GITHUB PAGES (O MAIS SIMPLES)

1.  Crie um repositório no GitHub (ex: "meu-portfolio-3d").
2.  Envie (dê "push") todos os seus arquivos para esse repositório.
3.  No GitHub, vá em "Settings" > "Pages".
4.  Em "Source", selecione o "Branch" (ramo) "main" e a pasta "/ (root)".
5.  Clique em "Save". Em alguns minutos, seu site estará no ar em:
    `https://seu-username.github.io/meu-portfolio-3d/`


► OPÇÃO 2: NETLIFY (RECOMENDADO)

1.  Tenha seu projeto no GitHub (como na Opção 1).
2.  Crie uma conta gratuita no Netlify (https://www.netlify.com/).
3.  Clique em "Add new site" > "Import an existing project".
4.  Conecte ao seu GitHub e escolha o repositório.
5.  O Netlify vai configurar tudo sozinho. Ele NÃO precisa de "build command" (comando de build) ou "publish directory" (pasta de publicação), pois seu site está na raiz.
6.  Clique em "Deploy site".
7.  Vantagem: O Netlify atualiza seu site automaticamente toda vez que você der "push" no GitHub.


► OPÇÃO 3: SERVIDOR NODE.JS (AVANÇADO)

Se você *precisar* de um backend (por exemplo, para um formulário de contato ou API), você pode usar um servidor Node.js.

1.  Instale o Node.js e o Express (`npm install express`).
2.  Crie um arquivo `server.js` na raiz do seu projeto:

    /* Exemplo de server.js */
    const express = require('express');
    const path = require('path');
    const app = express();
    const PORT = process.env.PORT || 3000;

    // Serve todos os arquivos estáticos (HTML, CSS, JS, assets)
    // da pasta onde o server.js está.
    app.use(express.static(path.join(__dirname, '/')));

    // Rota principal (envia o index.html)
    app.get('/', (req, res) => {
        res.sendFile(path.join(__dirname, 'index.html'));
    });

    // (Aqui você pode adicionar outras rotas de API, ex: /send-email)

    app.listen(PORT, () => {
        console.log(`Servidor rodando na porta ${PORT}`);
    });

3.  Para rodar localmente: `node server.js`
4.  Para publicar: Você precisará de um host como Heroku, Vercel, DigitalOcean, etc.